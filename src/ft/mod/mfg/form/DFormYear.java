/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DFormYear.java
 *
 * Created on 29/08/2011, 08:02:13 PM
 */

package ft.mod.mfg.form;

import ft.mod.DModConsts;
import ft.mod.mfg.db.DDbYear;
import sba.lib.DLibConsts;
import sba.lib.DLibUtils;
import sba.lib.db.DDbRegistry;
import sba.lib.gui.DGuiClient;
import sba.lib.gui.DGuiConsts;
import sba.lib.gui.DGuiUtils;
import sba.lib.gui.DGuiValidation;
import sba.lib.gui.bean.DBeanForm;

/**
 *
 * @author Sergio Flores
 */
public class DFormYear extends DBeanForm {

    private DDbYear moRegistry;

    /** Creates new form DFormYear */
    public DFormYear(DGuiClient client, String title) {
        setFormSettings(client, DGuiConsts.BEAN_FORM_EDIT, DModConsts.M_YER, DLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpContainer = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jlYear = new javax.swing.JLabel();
        moCalYear = new sba.lib.gui.bean.DBeanFieldCalendarYear();
        jPanel4 = new javax.swing.JPanel();
        jlDateStart = new javax.swing.JLabel();
        moDateStart = new sba.lib.gui.bean.DBeanFieldDate();

        jpContainer.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jpContainer.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(2, 1, 0, 5));

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlYear.setForeground(java.awt.Color.blue);
        jlYear.setText("AÃ±o:*");
        jlYear.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jlYear);
        jPanel3.add(moCalYear);

        jPanel1.add(jPanel3);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDateStart.setText("Inicio:*");
        jlDateStart.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlDateStart);
        jPanel4.add(moDateStart);

        jPanel1.add(jPanel4);

        jpContainer.add(jPanel1, java.awt.BorderLayout.NORTH);

        getContentPane().add(jpContainer, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel jlDateStart;
    private javax.swing.JLabel jlYear;
    private javax.swing.JPanel jpContainer;
    private sba.lib.gui.bean.DBeanFieldCalendarYear moCalYear;
    private sba.lib.gui.bean.DBeanFieldDate moDateStart;
    // End of variables declaration//GEN-END:variables

    /*
     * Private methods
     */

    private void initComponentsCustom() {
        DGuiUtils.setWindowBounds(this, 400, 250);
        
        moCalYear.setCalendarSettings(DGuiUtils.getLabelName(jlYear));
        moDateStart.setDateSettings(miClient, DGuiUtils.getLabelName(jlDateStart), true);
        
        moFields.addField(moCalYear);
        moFields.addField(moDateStart);
        
        moFields.setFormButton(jbSave);
    }
    
    /*
     * Public methods
     */
    
    /*
     * Overriden methods
     */
    
    @Override
    public void addAllListeners() {

    }

    @Override
    public void removeAllListeners() {

    }

    @Override
    public void reloadCatalogues() {
        
    }

    @Override
    public void setRegistry(DDbRegistry registry) throws Exception {
        moRegistry = (DDbYear) registry;

        mnFormResult = DLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
            moRegistry.setPkYearId(miClient.getSession().getWorkingYear());
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(DLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moCalYear.setValue(moRegistry.getPkYearId());
        moDateStart.setValue(moRegistry.getStart());

        setFormEditable(true);
        
        if (!moRegistry.isRegistryNew()) {
            moCalYear.setEditable(false);
        }

        addAllListeners();
    }

    @Override
    public DDbYear getRegistry() throws Exception {
        DDbYear registry = moRegistry.clone();

        if (registry.isRegistryNew()) {
            registry.setPkYearId(moCalYear.getValue());
        }

        registry.setStart(moDateStart.getValue());

        return registry;
    }

    @Override
    public DGuiValidation validateForm() {
        return moFields.validateFields();
    }
}
