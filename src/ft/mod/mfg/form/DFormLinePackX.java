/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package ft.mod.mfg.form;

import ft.mod.DModConsts;
import ft.mod.cfg.db.DDbPresent;
import ft.mod.mfg.db.DDbLinePack;
import ft.mod.mfg.db.DDbLinePackPresent;
import ft.mod.mfg.db.DMfgUtils;
import ft.mod.mfg.db.DRowOption;
import java.awt.BorderLayout;
import java.util.Vector;
import javax.swing.border.TitledBorder;
import sba.lib.DLibConsts;
import sba.lib.DLibUtils;
import sba.lib.db.DDbRegistry;
import sba.lib.grid.DGridColumnForm;
import sba.lib.grid.DGridConsts;
import sba.lib.grid.DGridPaneForm;
import sba.lib.grid.DGridRow;
import sba.lib.gui.DGuiClient;
import sba.lib.gui.DGuiConsts;
import sba.lib.gui.DGuiUtils;
import sba.lib.gui.DGuiValidation;
import sba.lib.gui.bean.DBeanForm;

/**
 *
 * @author Sergio Flores
 */
public class DFormLinePackX extends DBeanForm {

    private DDbLinePack moRegistry;
    private DGridPaneForm moGridPresents;

    /** Creates new form DFormLinePack */
    public DFormLinePackX(DGuiClient client, String title) {
        setFormSettings(client, DGuiConsts.BEAN_FORM_EDIT, /*XXXDModConsts.MU_LIN_PCK*/0, DLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpContainer = new javax.swing.JPanel();
        jpLine = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        moTextCode = new sba.lib.gui.bean.DBeanFieldText();
        jPanel4 = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        moTextName = new sba.lib.gui.bean.DBeanFieldText();
        jPanel5 = new javax.swing.JPanel();
        jlDepartment = new javax.swing.JLabel();
        moKeyDepartment = new sba.lib.gui.bean.DBeanFieldKey();
        jpPresents = new javax.swing.JPanel();

        jpContainer.setLayout(new java.awt.BorderLayout());

        jpLine.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jpLine.setLayout(new java.awt.GridLayout(3, 1, 0, 5));

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCode.setText("CÃ³digo:*");
        jlCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jlCode);

        moTextCode.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel3.add(moTextCode);

        jpLine.add(jPanel3);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlName.setText("Nombre:*");
        jlName.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlName);

        moTextName.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel4.add(moTextName);

        jpLine.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDepartment.setText("Departamento:*");
        jlDepartment.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel5.add(jlDepartment);

        moKeyDepartment.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel5.add(moKeyDepartment);

        jpLine.add(jPanel5);

        jpContainer.add(jpLine, java.awt.BorderLayout.NORTH);

        jpPresents.setBorder(javax.swing.BorderFactory.createTitledBorder("Presentaciones:"));
        jpPresents.setLayout(new java.awt.BorderLayout());
        jpContainer.add(jpPresents, java.awt.BorderLayout.CENTER);

        getContentPane().add(jpContainer, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlDepartment;
    private javax.swing.JLabel jlName;
    private javax.swing.JPanel jpContainer;
    private javax.swing.JPanel jpLine;
    private javax.swing.JPanel jpPresents;
    private sba.lib.gui.bean.DBeanFieldKey moKeyDepartment;
    private sba.lib.gui.bean.DBeanFieldText moTextCode;
    private sba.lib.gui.bean.DBeanFieldText moTextName;
    // End of variables declaration//GEN-END:variables

    /*
     * Private methods
     */

    private void initComponentsCustom() {
        DGuiUtils.setWindowBounds(this, 640, 400);
        
        moTextCode.setTextSettings(DGuiUtils.getLabelName(jlCode), 5);
        moTextName.setTextSettings(DGuiUtils.getLabelName(jlName), 50);
        moKeyDepartment.setKeySettings(miClient, DGuiUtils.getLabelName(jlDepartment), true);
        
        moFields.addField(moTextCode);
        moFields.addField(moTextName);
        moFields.addField(moKeyDepartment);
        
        moFields.setFormButton(jbSave);
        
        moGridPresents = new DGridPaneForm(miClient, mnFormType, DModConsts.CU_PRE, DGuiUtils.getLabelName(((TitledBorder) jpPresents.getBorder()).getTitle())) {
            
            @Override
            public void initGrid() {
                setRowButtonsEnabled(false);
            }
            
            @Override
            public void createGridColumns() {
                int col = 0;
                DGridColumnForm[] columns = new DGridColumnForm[3];

                columns[col++] = new DGridColumnForm(DGridConsts.COL_TYPE_TEXT_NAME_CAT_M, DGridConsts.COL_TITLE_NAME);
                columns[col++] = new DGridColumnForm(DGridConsts.COL_TYPE_TEXT_CODE_CAT, DGridConsts.COL_TITLE_CODE);
                columns[col] = new DGridColumnForm(DGridConsts.COL_TYPE_BOOL_S, "Aplica");
                columns[col].setEditable(true);

                for (col = 0; col < columns.length; col++) {
                    moModel.getGridColumns().add(columns[col]);
                }
            }
        };
        
        jpPresents.add(moGridPresents, BorderLayout.CENTER);
        mvFormGrids.add(moGridPresents);
    }
    
    /*
     * Public methods
     */
    
    /*
     * Overriden methods
     */
    
    @Override
    public void addAllListeners() {

    }

    @Override
    public void removeAllListeners() {

    }

    @Override
    public void reloadCatalogues() {
        miClient.getSession().populateCatalogue(moKeyDepartment, DModConsts.MU_DPT, DLibConsts.UNDEFINED, null);
    }

    @Override
    public void setRegistry(DDbRegistry registry) throws Exception {
        Vector<DGridRow> optionPresents = new Vector<>();
        
        moRegistry = (DDbLinePack) registry;

        mnFormResult = DLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            moRegistry.setCode("");
            moRegistry.initPrimaryKey();
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(DLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moTextCode.setValue(moRegistry.getCode());
        moTextName.setValue(moRegistry.getName());
        moKeyDepartment.setValue(new int[] { moRegistry.getFkDepartmentId() });
        
        for (DDbPresent present : DMfgUtils.readPresents(miClient.getSession())) {
            optionPresents.add(new DRowOption(present.getPkPresentId(), present.getCode(), present.getName(), false));
        }

        for (DDbLinePackPresent linePackPresent : moRegistry.getChildPresents()) {
            for (DGridRow row : optionPresents) {
                if (((DRowOption) row).OptionId == linePackPresent.getPkPresentId()) {
                    ((DRowOption) row).Selected = true;
                    break;
                }
            }
        }
        
        moGridPresents.populateGrid(optionPresents);
        
        setFormEditable(true);

        addAllListeners();
    }

    @Override
    public DDbLinePack getRegistry() throws Exception {
        DDbLinePackPresent linePackPresent = null;
        DDbLinePack registry = moRegistry.clone();

        if (registry.isRegistryNew()) { }

        registry.setCode(moTextCode.getValue());
        registry.setName(moTextName.getValue());
        registry.setFkDepartmentId(moKeyDepartment.getValue()[0]);
        
        registry.getChildPresents().clear();
        for (DGridRow row : moGridPresents.getModel().getGridRows()) {
            if (((DRowOption) row).Selected) {
                linePackPresent = new DDbLinePackPresent();
                
                //linePackPresent.setPkLinePackId(...);
                linePackPresent.setPkPresentId(((DRowOption) row).OptionId);
                
                registry.getChildPresents().add(linePackPresent);
            }
        }

        return registry;
    }

    @Override
    public DGuiValidation validateForm() {
        return moFields.validateFields();
    }
}
